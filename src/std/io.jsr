class IOException is Exception end
class FileNotFoundException is IOException end

var SEEK_SET, SEEK_CUR, SEEK_END = 0, 1, 2

class File
    native new(path, mode, handle=null)

    native tell()
    native seek(off, whence=0)
    native rewind()

    native read(bytes)
    native readAll()
    native readLine()
    native write(data)
    native close()
    native flush()

    fun writeln(data)
        this.write(data)
        this.write('\n')
    end

    fun size()
        var oldpos = this.tell()
        this.seek(0, SEEK_END)
        var size = this.tell()
        this.seek(oldpos)
        return size
    end

    fun __iter__(_)
        return this.readLine()
    end

    fun __next__(line)
        return line
    end

    fun __string__()
        return "<" + ("closed " if this._closed else "open ") + super() + ">"
    end
end

class __PFile is File
    fun new(handle)
        this._handle = handle
        this._closed = false
    end

    native close()
end

native popen(name, mode="r")
native remove(path)
native rename(oldpath, newpath)

static native init()
init()